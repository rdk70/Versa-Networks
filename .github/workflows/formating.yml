name: Lint & Format

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Allow committing auto-fixed files
      statuses: write
      checks: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2  # Ensures at least one previous commit is available

      # Install linters & formatters for Python and Markdown
      - name: Install Python & Markdown linters
        run: |
          pip install black isort ruff
          npm install -g textlint textlint-rule-terminology textlint-rule-preset-ja-technical-writing prettier
          

      # Auto-fix Python files
      - name: Auto-fix Python files
        run: |
          black .  # Auto-fix Python formatting
          isort .  # Auto-sort imports
          ruff check --fix .  # Corrected Ruff auto-fix command
        continue-on-error: true

      # Auto-fix Markdown files
      - name: Auto-fix all Markdown files
        run: |
          textlint --fix "**/*.md" || true
          prettier --write "**/*.md" || true

      # Commit and push any auto-fixed changes
      - name: Commit and Push Fixes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add .
          git commit -m "Auto-fix Python & Markdown formatting and linting" || echo "No changes to commit"
          git push || echo "No changes to push"

      # Run Super-Linter to check remaining issues
      - name: Run Super-Linter (Check Only)
        uses: super-linter/super-linter@v6.1.0
        env:
          VALIDATE_ALL_CODEBASE: true
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LINTER_RULES_PATH: .
          VALIDATE_PYTHON_RUFF: true
          VALIDATE_PYTHON_BLACK: true
          VALIDATE_PYTHON_MYPY: true

      # Run Prettier (Check only, no auto-fix)
      - name: Run Prettier (Check)
        run: npx prettier --check .
